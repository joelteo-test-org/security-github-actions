---
name: Security Credential Scan
on: 
  workflow_call:
jobs:
  TruffleHog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified  --exclude-detectors=slack
      - name: Display help
        if: failure()
        run: |
          echo "Credential found. See https://poloniex.atlassian.net/wiki/spaces/SEC/pages/2830959634 for guidance / remediation steps" >> $GITHUB_STEP_SUMMARY
  semgrep:
    # User definable name of this GitHub Actions job.
    name: semgrep/ci 
    # If you are self-hosting, change the following `runs-on` value: 
    runs-on: ubuntu-latest
    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: returntocorp/semgrep
    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')
    steps:
      # Fetch project source with GitHub Actions Checkout.
      - uses: actions/checkout@v3
      # Run the "semgrep ci" command on the command line of the docker image.
      - run: semgrep ci --config auto
  notification_job:
    if: failure()
    needs: [TruffleHog, semgrep]
    name: Security Slack Notification
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          JOB_OUTPUTS: ${{ toJson(needs)}}
        run: |
          EVENT_NAME=$(echo $GITHUB_CONTEXT | jq -r .event_name ) 

          case $EVENT_NAME in 
          workflow_dispatch)
            TITLE="SAST Scan failed on $EVENT_NAME event at $(echo $GITHUB_CONTEXT | jq -r .event.repository.html_url)"
            ;;
          pull_request)
            TITLE="SAST Scan failed on $EVENT_NAME event at $(echo $GITHUB_CONTEXT | jq -r .event.pull_request._links.html.href)"
            ;;
          esac

          SLACK_MSG="$TITLE\nScan results\n\`\`\`$(echo $JOB_OUTPUTS | sed 's/"/\\"/g')\`\`\`"
          SLACK_MSG='{"text":"'$SLACK_MSG'"}'
          curl -X POST -H 'Content-type: application/json' --data "$SLACK_MSG" https://hooks.slack.com/services/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